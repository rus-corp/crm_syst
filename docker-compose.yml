networks:
  astro:
    driver: bridge


volumes:
  nginx_certs:
    external: true


services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - ./backend/.env
    volumes:
      - ./docker_data/psql:/var/lib/postgresql/data
    networks:
      - astro
  
  
  api:
    container_name: api
    build:
      context: ./backend
      dockerfile: Dockerfile
    working_dir: /app
    ports:
      - 8000:8000
    volumes:
      - ./backend:/usr/src/app
      - ./docker_data/static:/app/static
    depends_on:
      - db
    env_file:
      - ./backend/.env
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    networks:
      - astro
  
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - astro
  

  nginx:
    image: "nginx:latest"
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker_data/certbot:/var/www/certbot
      - ./docker_data/letsencrypt:/etc/letsencrypt
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - api
      - web
    networks:
      - astro
  
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./docker_data/letsencrypt:/etc/letsencrypt
      - ./docker_data/certbot:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 1 & wait $!; done;'"
    networks:
      - astro
